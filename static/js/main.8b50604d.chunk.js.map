{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","slice","interval","window","setInterval","setState","console","info","this","prevProps","name","props","debug","clearInterval","Typography","align","color","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"4QAYaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAC3CC,SAAU,MAHd,uDAME,WAA2B,IAAD,OACxBC,OAAOC,aAAY,kBAAM,EAAKC,SAC5B,CAAEP,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,OAC5C,KAGH,IAAMC,EAAWC,OAAOC,aAAY,kBAAME,QAAQC,MAChD,IAAIR,MAAOC,cAAcC,OAAO,IAAK,MACpC,KAEHO,KAAKH,SAAS,CAAEH,eAhBpB,gCAmBE,SAAmBO,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCJ,QAAQM,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDF,KAAKG,MAAMD,SAtBpE,kCA0BE,WACMF,KAAKX,MAAMK,UACbW,cAAcL,KAAKX,MAAMK,YA5B/B,oBAgCE,WACE,OAEE,cAACY,EAAA,EAAD,CACEC,MAAM,SACNC,MAAM,UAFR,SAIE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,KAAKG,MAAMD,OAGb,YAED,sBAAMO,UAAU,cAAhB,SACGT,KAAKX,MAAMC,gBA/CxB,GAA2BoB,IAAMC,WCFjC,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACE3B,MAAyB,CACvB4B,UAAU,EACVC,UAAW,WAHf,uDAME,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKzB,SAAS,CAAEoB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKvB,SAAS,CAAEoB,UAAU,OAG5BtB,OAAOC,aAAY,kBAAM,EAAKC,SAC5B,CAAEqB,UAAWN,QACZ,QAlBP,oBAqBE,WACE,OACE,qCACE,cAACN,EAAA,EAAD,CACEC,MAAM,SACNC,MAAM,UAFR,SAIE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAAC,IAAD,SAIHT,KAAKX,MAAM4B,UAAY,cAAC,EAAD,CAAOf,KAAMF,KAAKX,MAAM6B,mBAlCxD,GAAyBR,IAAMC,WClB/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.8b50604d.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@mui/material/Typography';\n\ninterface State {\n  time: string,\n  interval: number | null,\n}\n\ninterface Props {\n  name: string,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toUTCString().slice(-12, -4),\n    interval: null,\n  };\n\n  componentDidMount(): void {\n    window.setInterval(() => this.setState(\n      { time: new Date().toUTCString().slice(-12, -4) },\n    ), 1000);\n\n    // eslint-disable-next-line no-console\n    const interval = window.setInterval(() => console.info(\n      new Date().toUTCString().slice(-12, -4),\n    ), 1000);\n\n    this.setState({ interval });\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.interval) {\n      clearInterval(this.state.interval);\n    }\n  }\n\n  render(): React.ReactNode {\n    return (\n\n      <Typography\n        align=\"center\"\n        color=\"primary\"\n      >\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {this.props.name}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {this.state.time}\n          </span>\n        </div>\n      </Typography>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Typography from '@mui/material/Typography';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean,\n  clockName: string,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    window.setInterval(() => this.setState(\n      { clockName: getRandomName() },\n    ), 3300);\n  }\n\n  render() {\n    return (\n      <>\n        <Typography\n          align=\"center\"\n          color=\"primary\"\n        >\n          <div className=\"App\">\n            <h1>React clock</h1>\n            <AccessTimeIcon />\n          </div>\n        </Typography>\n\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}