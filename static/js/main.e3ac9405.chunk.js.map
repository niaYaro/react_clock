{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","slice","nameMessageInterval","window","setInterval","setState","interval","console","info","this","prevProps","name","props","debug","clearInterval","Typography","align","color","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","timeInterval","leftClickHandler","rightClickHandler","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"4QAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAF/C,EAKEC,yBALF,yDAOE,WAA2B,IAAD,OACxBC,OAAOC,aAAY,kBAAM,EAAKC,SAC5B,CAAEP,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,OAC5C,KAGH,IAAMK,EAAWH,OAAOC,aAAY,kBAAMG,QAAQC,MAChD,IAAIT,MAAOC,cAAcC,OAAO,IAAK,MACpC,KAEHQ,KAAKP,oBAAsBI,IAjB/B,gCAoBE,SAAmBI,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCJ,QAAQM,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDF,KAAKG,MAAMD,SAvBpE,kCA2BE,WACMF,KAAKP,qBACPY,cAAcL,KAAKP,uBA7BzB,oBAiCE,WACE,IAAQJ,EAASW,KAAKZ,MAAdC,KACAa,EAASF,KAAKG,MAAdD,KAER,OAEE,cAACI,EAAA,EAAD,CACEC,MAAM,SACNC,MAAM,UAFR,SAIE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGP,IAGF,YAED,sBAAMO,UAAU,cAAhB,SACGpB,aAnDb,GAA2BqB,IAAMC,WCDjC,SAASC,IACP,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAQX,IAAMG,EAAb,4MACE5B,MAAyB,CACvB6B,UAAU,EACVC,UAAW,WAHf,EAMEC,kBANF,IAwBEC,iBAAmB,WACb,EAAKD,cACP,EAAKvB,SAAS,CAAEqB,UAAU,KA1BhC,EA8BEI,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAK3B,SAAS,CAAEqB,UAAU,KAhC9B,uDAQE,WAA2B,IAAD,OACxBO,SAASC,iBAAiB,QAASzB,KAAKoB,kBACxCI,SAASC,iBAAiB,cAAezB,KAAKqB,mBAC9C,IAAMxB,EAAWH,OAAOC,aAAY,kBAAM,EAAKC,SAC7C,CAAEsB,UAAWN,QACZ,MAEHZ,KAAKmB,aAAetB,IAfxB,kCAkBE,WACE2B,SAASE,oBAAoB,QAAS1B,KAAKoB,kBAC3CI,SAASE,oBAAoB,cAAe1B,KAAKqB,mBACjD3B,OAAOW,cAAcL,KAAKmB,gBArB9B,oBAmCE,WACE,MAAgCnB,KAAKZ,MAA7B6B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,qCACE,cAACZ,EAAA,EAAD,CACEC,MAAM,SACNC,MAAM,UAFR,SAIE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAAC,IAAD,SAIHQ,GAAY,cAAC,EAAD,CAAOf,KAAMgB,WAlDlC,GAAyBR,IAAMC,WClB/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.e3ac9405.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@mui/material/Typography';\n\ninterface State {\n  time: string,\n}\n\ninterface Props {\n  name: string,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  nameMessageInterval: number | undefined;\n\n  componentDidMount(): void {\n    window.setInterval(() => this.setState(\n      { time: new Date().toUTCString().slice(-12, -4) },\n    ), 1000);\n\n    // eslint-disable-next-line no-console\n    const interval = window.setInterval(() => console.info(\n      new Date().toUTCString().slice(-12, -4),\n    ), 1000);\n\n    this.nameMessageInterval = interval;\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.nameMessageInterval) {\n      clearInterval(this.nameMessageInterval);\n    }\n  }\n\n  render(): React.ReactNode {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n\n      <Typography\n        align=\"center\"\n        color=\"primary\"\n      >\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {name}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {time}\n          </span>\n        </div>\n      </Typography>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Typography from '@mui/material/Typography';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean,\n  clockName: string,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timeInterval: number | undefined;\n\n  componentDidMount(): void {\n    document.addEventListener('click', this.leftClickHandler);\n    document.addEventListener('contextmenu', this.rightClickHandler);\n    const interval = window.setInterval(() => this.setState(\n      { clockName: getRandomName() },\n    ), 3300);\n\n    this.timeInterval = interval;\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.leftClickHandler);\n    document.removeEventListener('contextmenu', this.rightClickHandler);\n    window.clearInterval(this.timeInterval);\n  }\n\n  leftClickHandler = () => {\n    if (this.timeInterval) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  rightClickHandler = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <>\n        <Typography\n          align=\"center\"\n          color=\"primary\"\n        >\n          <div className=\"App\">\n            <h1>React clock</h1>\n            <AccessTimeIcon />\n          </div>\n        </Typography>\n\n        {hasClock && <Clock name={clockName} />}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}